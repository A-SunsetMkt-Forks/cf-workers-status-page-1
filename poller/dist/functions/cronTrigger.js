import e from"../../config.json";import{getCheckLocation as t,getKVMonitors as s,setKVMonitors as i}from"./helpers";export async function processCronTrigger(n){let o=await t(),c=new Date().toISOString().split("T")[0],r=Date.now(),a=await s();for(let t of(a||(a={}),e.monitors)){console.log(`Checking ${t.name} ...`);let s={method:t.method||"GET",redirect:t.followRedirect?"follow":"manual",headers:{"User-Agent":e.settings.user_agent||"cf-workers-status-poller"}};void 0===a[t.id]&&(a[t.id]={lastIncident:void 0,operational:!0,incidents:[],checks:{}});let i=Date.now(),n=await fetch(t.url,s),d=Math.round(Date.now()-i),l=n.status===(t.expectStatus||200),h=a[t.id].operational!==l;if(!e.settings.collectResponseTimes&&l||a[t.id].checks.hasOwnProperty(c)||(a[t.id].checks[c]={incidents:[],summery:{},res:[]},a[t.id].operational||a[t.id].checks[c].incidents.push(a[t.id].lastIncident)),a[t.id].operational=l,e.settings.collectResponseTimes&&l){a[t.id].checks[c].res.hasOwnProperty(o)||(a[t.id].checks[c].summery[o]={n:0,ms:0,a:0});let e=++a[t.id].checks[c].summery[o].n,s=a[t.id].checks[c].summery[o].ms+=d;a[t.id].checks[c].summery[o].a=Math.round(s/e),a[t.id].checks[c].res.push({t:r,loc:o,ms:d}),h&&(a[t.id][a[t.id].lastIncident].end=r)}if(!l&&h){a[t.id].incidents.push({start:r,status:n.status,statusText:n.statusText});let e=a[t.id].incidents.length-1;a[t.id].checks[c].incidents.push(e)}}return await i(a),new Response("OK")}
//# sourceMappingURL=data:application/json;base64,